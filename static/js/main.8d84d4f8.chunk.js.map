{"version":3,"sources":["App.module.scss","useStore.js","Dashboard.js","App.js","reportWebVitals.js","index.js","Dashboard.module.scss"],"names":["module","exports","useStore","create","devtools","set","get","notes","data","fetch","a","axios","console","log","StyledFab","withStyles","root","marginLeft","Fab","THEME","createMuiTheme","typography","fontFamily","GreenCheckbox","color","green","checked","props","Checkbox","Dashboard","state","modalOpen","selectedDay","inputTodoText","days","monday","todos","name","done","tuesday","wednesday","thursday","friday","saturday","sunday","this","hasOwnProperty","updatedDay","updatedDays","setState","signOut","style","textAlign","firebase","auth","currentUser","displayName","type","onClick","className","styles","fab","aria-label","theme","width","test","Object","keys","map","day","index","row","rowHeader","Chip","size","label","todo","toDoIndex","FormControlLabel","control","onChange","event","newToDo","target","isOpen","contentLabel","onRequestClose","FormControl","variant","fullWidth","InputLabel","id","Select","labelId","value","MenuItem","TextField","placeholder","helperText","margin","e","InputLabelProps","shrink","modal","addTodo","React","Component","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","user","unregisterAuthObserver","onAuthStateChanged","getState","firebaseAuth","then","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d84d4f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"App_test__3Xp7m\",\"row\":\"App_row__3uKGE\",\"rowHeader\":\"App_rowHeader__3cVMf\",\"fab\":\"App_fab__1pPIC\"};","import create from 'zustand';\n\nimport { devtools } from 'zustand/middleware';\nimport axios from 'axios';\n\nconst createNoteStore = (set, get) => ({\n    data: {},\n    fetch: async () => {\n        try {\n            const data = await axios.get('https://jsonplaceholder.typicode.com/posts/1')\n            console.log(data);\n\n        } catch (error) {\n            console.log(error,\"error\")\n        }\n    }\n});\n\nexport const useStore = create(devtools((set, get) => ({\n    notes: createNoteStore(set, get),\n})));","// import './App.css';\nimport styles from \"./Dashboard.module.scss\";\nimport React from \"react\";\n// for material-ui\nimport \"fontsource-roboto\";\n\nimport Chip from \"@material-ui/core/Chip\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport ReactModal from \"react-modal\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nimport firebase from \"firebase\";\n\nconst StyledFab = withStyles({\n  root: {\n    // position: \"absolute\",\n    // bottom: \"2%\",\n    // right: \"5%\",\n    marginLeft: \"2rem\",\n  },\n})(Fab);\n\nconst THEME = createMuiTheme({\n  typography: {\n    fontFamily: `\"Dancing\", sans-serif`,\n    // \"fontSize\": 14,\n    // \"fontWeightLight\": 300,\n    // \"fontWeightRegular\": 400,\n    // \"fontWeightMedium\": 500\n  },\n});\n\nconst GreenCheckbox = withStyles({\n  root: {\n    fontFamily: \"Caveat\",\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      selectedDay: \"\",\n      inputTodoText: \"\",\n\n      days: {\n        monday: {\n          todos: [\n            {\n              name: \"Laundry\",\n              done: false,\n            },\n            {\n              name: \"Genshin Resin\",\n              done: false,\n            },\n          ],\n        },\n        tuesday: {\n          todos: [\n            {\n              name: \"Cooking\",\n              done: false,\n            },\n            {\n              name: \"Dancing\",\n              done: false,\n            },\n          ],\n        },\n        wednesday: {\n          todos: [],\n        },\n        thursday: {\n          todos: [],\n        },\n        friday: {\n          todos: [],\n        },\n        saturday: {\n          todos: [],\n        },\n        sunday: {\n          todos: [\n            {\n              name: \"Take out recycling bin\",\n              done: false,\n            },\n          ],\n        },\n      },\n      notes: \"Get prepared and mentally ready for new job\",\n    };\n  }\n\n  addTodo() {\n    const { days, selectedDay, inputTodoText } = this.state;\n\n    if (days.hasOwnProperty(selectedDay) && inputTodoText !== \"\") {\n      const updatedToDo = [\n        ...days[selectedDay].todos,\n        {\n          name: inputTodoText,\n          done: false,\n        },\n      ];\n\n      const updatedDay = {\n        todos: updatedToDo,\n      };\n\n      const updatedDays = { ...days };\n\n      updatedDays[selectedDay] = updatedDay;\n\n      this.setState({\n        days: updatedDays,\n        modalOpen: false,\n      });\n    } else {\n      this.setState({ modalOpen: false });\n    }\n  }\n\n  signOut() {\n    const { signOut } = this.props;\n    signOut();\n  }\n\n  render() {\n    const { days } = this.state;\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <h1>Bullet Journal</h1>\n        <p>\n          Welcome {firebase.auth().currentUser.displayName}! You are now\n          signed-in!\n        </p>\n        <button type=\"button\" onClick={() => this.signOut()}>\n          Sign out\n        </button>\n        <StyledFab\n          className={styles.fab}\n          color=\"secondary\"\n          aria-label=\"add\"\n          onClick={() => this.setState({ modalOpen: !this.state.modalOpen })}\n        >\n          <AddIcon />\n        </StyledFab>\n        <MuiThemeProvider theme={THEME}>\n          <div style={{ width: \"100%\", textAlign: \"center\" }}>\n            <div className={styles.test}>\n              {Object.keys(days).map((day, index) => (\n                <div className={styles.row}>\n                  <span className={styles.rowHeader}>{day} - &nbsp;</span>\n                  <Chip color=\"secondary\" size=\"small\" label={index + 1} />\n                  <div>\n                    {days[day].todos.map((todo, toDoIndex) => (\n                      <div>\n                        <FormControlLabel\n                          control={\n                            <GreenCheckbox\n                              checked={todo.done}\n                              onChange={(event) => {\n                                const newToDo = [...this.state.days[day].todos];\n                                newToDo[toDoIndex].done = event.target.checked;\n\n                                const updatedDays = { ...this.state.days };\n                                updatedDays[day].todos = newToDo;\n\n                                this.setState({ days: updatedDays });\n                              }}\n                              name=\"checkedG\"\n                            />\n                          }\n                          label={todo.name}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n              <div className={styles.row}>\n                <span className={styles.rowHeader}>notes</span>\n                <div>{this.state.notes}</div>\n              </div>\n            </div>\n          </div>\n          <ReactModal\n            isOpen={this.state.modalOpen}\n            contentLabel=\"Minimal Modal Example\"\n            onRequestClose={() => this.setState({ modalOpen: false })}\n          >\n            <FormControl variant=\"filled\" fullWidth>\n              <InputLabel id=\"demo-simple-select-filled-label\">\n                Day of the week\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-filled-label\"\n                id=\"demo-simple-select-filled\"\n                value={this.state.selectedDay}\n                onChange={(event) =>\n                  this.setState({ selectedDay: event.target.value })\n                }\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value=\"monday\">Monday</MenuItem>\n                <MenuItem value=\"tuesday\">Tuesday</MenuItem>\n                <MenuItem value=\"wednesday\">Wednesday</MenuItem>\n                <MenuItem value=\"thursday\">Thursday</MenuItem>\n                <MenuItem value=\"friday\">Friday</MenuItem>\n                <MenuItem value=\"saturday\">Saturday</MenuItem>\n                <MenuItem value=\"sunday\">Sunday</MenuItem>\n              </Select>\n\n              <TextField\n                id=\"standard-full-width\"\n                label=\"Do what?\"\n                placeholder=\"i.e. Play final fantasy xiv online\"\n                helperText=\"Enter the description of the to do item\"\n                fullWidth\n                margin=\"normal\"\n                size=\"medeium\"\n                variant=\"filled\"\n                onChange={(e) =>\n                  this.setState({ inputTodoText: e.target.value })\n                }\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </FormControl>\n            <div className={styles.modal}>\n              <button onClick={() => this.addTodo()}>Save</button>\n              <button onClick={() => this.setState({ modalOpen: false })}>\n                Cancel\n              </button>\n            </div>\n          </ReactModal>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n","// import './App.css';\nimport styles from \"./App.module.scss\";\nimport React from \"react\";\n// for material-ui\nimport \"fontsource-roboto\";\nimport { useStore } from \"./useStore\";\n// import { useDataStore } from './DataStore';\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\nimport Dashboard from \"./Dashboard\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB38pZg2OdcWaM2MqSEcgIvyJDL1guOAyU\",\n  authDomain: \"bullet-journal-683a1.firebaseapp.com\",\n  projectId: \"bullet-journal-683a1\",\n  storageBucket: \"bullet-journal-683a1.appspot.com\",\n  messagingSenderId: \"609524511722\",\n  appId: \"1:609524511722:web:f7818549e20b7ded21b893\",\n  measurementId: \"G-ZNCD2FM8K6\",\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSignedIn: false,\n    };\n    this.uiConfig = {\n      // Popup signin flow rather than redirect flow.\n      signInFlow: \"popup\",\n      // We will display Google and Facebook as auth providers.\n      signInOptions: [\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n        firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      ],\n      callbacks: {\n        // Avoid redirects after sign-in.\n        signInSuccessWithAuthResult: (user) => {\n          this.setState({ isSignedIn: user });\n        },\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) => {\n      this.setState({ isSignedIn: !!user });\n    });\n\n    useStore.getState().notes.fetch();\n  }\n\n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    if (this.unregisterAuthObserver) {\n      this.unregisterAuthObserver();\n    }\n  }\n\n  render() {\n    if (!this.state.isSignedIn) {\n      return (\n        <div style={{ textAlign: \"center\" }}>\n          <h1>Bullet Journal</h1>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth\n            uiConfig={this.uiConfig}\n            firebaseAuth={firebase.auth()}\n\n          />\n        </div>\n      );\n    }\n    return (\n      <div>\n        <Dashboard\n          firebaseAuth={firebase.auth()}\n          signOut={() => {\n              firebase\n                .auth()\n                .signOut()\n                .then(() => {\n                  // Sign-out successful.\n                  console.log(\"successfully logout\");\n                  this.setState({ isSignedIn: false });\n                })\n                .catch((error) => {\n                  // An error happened.\n                  console.log(error, \"errors\");\n                });\n            }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"Dashboard_test__15p7Q\",\"row\":\"Dashboard_row__3wuNn\",\"rowHeader\":\"Dashboard_rowHeader__3B6IK\",\"modal\":\"Dashboard_modal__1fZnm\"};"],"sourceRoot":""}