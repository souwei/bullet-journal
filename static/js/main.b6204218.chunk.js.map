{"version":3,"sources":["App.js","reportWebVitals.js","index.js","App.module.scss"],"names":["StyledFab","withStyles","root","position","bottom","right","Fab","THEME","createMuiTheme","typography","fontFamily","GreenCheckbox","color","green","checked","props","Checkbox","App","state","modalOpen","selectedDay","inputTodoText","days","monday","todos","name","done","tuesday","wednesday","thursday","friday","saturday","sunday","notes","this","hasOwnProperty","updatedDay","updatedDays","setState","className","theme","styles","test","Object","keys","map","day","index","row","rowHeader","Chip","size","label","todo","toDoIndex","FormControlLabel","control","onChange","event","newToDo","target","fab","aria-label","onClick","isOpen","contentLabel","onRequestClose","FormControl","variant","fullWidth","InputLabel","id","Select","labelId","value","MenuItem","TextField","placeholder","helperText","margin","e","InputLabelProps","shrink","addTodo","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b6204218.chunk.js","sourcesContent":["// import './App.css';\nimport styles from \"./App.module.scss\";\nimport React from \"react\";\n// for material-ui\nimport \"fontsource-roboto\";\n\nimport Chip from \"@material-ui/core/Chip\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport ReactModal from \"react-modal\";\n\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\n\nconst StyledFab = withStyles({\n  root: {\n    position: \"absolute\",\n    bottom: \"2%\",\n    right: \"5%\",\n  },\n})(Fab);\n\nconst THEME = createMuiTheme({\n  typography: {\n    fontFamily: `\"Dancing\", sans-serif`,\n    // \"fontSize\": 14,\n    // \"fontWeightLight\": 300,\n    // \"fontWeightRegular\": 400,\n    // \"fontWeightMedium\": 500\n  },\n});\n\nconst GreenCheckbox = withStyles({\n  root: {\n    fontFamily: \"Caveat\",\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false,\n      selectedDay: \"\",\n      inputTodoText: \"\",\n      days: {\n        monday: {\n          todos: [\n            {\n              name: \"Laundry\",\n              done: false,\n            },\n            {\n              name: \"Genshin Resin\",\n              done: false,\n            },\n          ],\n        },\n        tuesday: {\n          todos: [\n            {\n              name: \"Cooking\",\n              done: false,\n            },\n            {\n              name: \"Dancing\",\n              done: false,\n            },\n          ],\n        },\n        wednesday: {\n          todos: [],\n        },\n        thursday: {\n          todos: [],\n        },\n        friday: {\n          todos: [],\n        },\n        saturday: {\n          todos: [],\n        },\n        sunday: {\n          todos: [\n            {\n              name: \"Take out recycling bin\",\n              done: false,\n            },\n          ],\n        },\n      },\n      notes: \"Get prepared and mentally ready for new job\",\n    };\n  }\n\n  addTodo() {\n    const { days, selectedDay, inputTodoText } = this.state;\n\n    if (days.hasOwnProperty(selectedDay) && inputTodoText !== \"\") {\n      const updatedToDo = [\n        ...days[selectedDay].todos,\n        {\n          name: inputTodoText,\n          done: false,\n        },\n      ];\n\n      const updatedDay = {\n        todos: updatedToDo,\n      };\n\n      const updatedDays = { ...days };\n\n      updatedDays[selectedDay] = updatedDay;\n\n      this.setState({\n        days: updatedDays,\n        modalOpen: false,\n      });\n    } else {\n      this.setState({ modalOpen: false });\n    }\n  }\n\n  render() {\n    const { days } = this.state;\n\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider theme={THEME}>\n          <div className={styles.test}>\n            {Object.keys(days).map((day, index) => (\n              <div className={styles.row}>\n                <span className={styles.rowHeader}>{day} - &nbsp;</span>\n                <Chip color=\"secondary\" size=\"small\" label={index + 1} />\n                <div>\n                  {days[day].todos.map((todo, toDoIndex) => (\n                    <div>\n                      <FormControlLabel\n                        control={\n                          <GreenCheckbox\n                            checked={todo.done}\n                            onChange={(event) => {\n                              const newToDo = [...this.state.days[day].todos];\n                              newToDo[toDoIndex].done = event.target.checked;\n\n                              const updatedDays = { ...this.state.days };\n                              updatedDays[day].todos = newToDo;\n\n                              this.setState({ days: updatedDays });\n                            }}\n                            name=\"checkedG\"\n                          />\n                        }\n                        label={todo.name}\n                      />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n            <div className={styles.row}>\n              <span className={styles.rowHeader}>notes</span>\n              <div>{this.state.notes}</div>\n            </div>\n          </div>\n          <StyledFab\n            className={styles.fab}\n            color=\"secondary\"\n            aria-label=\"add\"\n            onClick={() => this.setState({ modalOpen: !this.state.modalOpen })}\n          >\n            <AddIcon />\n          </StyledFab>\n\n          <ReactModal\n            isOpen={this.state.modalOpen}\n            contentLabel=\"Minimal Modal Example\"\n            onRequestClose={() => this.setState({ modalOpen: false })}\n          >\n            <FormControl variant=\"filled\" fullWidth>\n              <InputLabel id=\"demo-simple-select-filled-label\">\n                Day of the week\n              </InputLabel>\n              <Select\n                labelId=\"demo-simple-select-filled-label\"\n                id=\"demo-simple-select-filled\"\n                value={this.state.selectedDay}\n                onChange={(event) =>\n                  this.setState({ selectedDay: event.target.value })\n                }\n              >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                <MenuItem value=\"monday\">Monday</MenuItem>\n                <MenuItem value=\"tuesday\">Tuesday</MenuItem>\n                <MenuItem value=\"wednesday\">Wednesday</MenuItem>\n                <MenuItem value=\"thursday\">Thursday</MenuItem>\n                <MenuItem value=\"friday\">Friday</MenuItem>\n                <MenuItem value=\"saturday\">Saturday</MenuItem>\n                <MenuItem value=\"sunday\">Sunday</MenuItem>\n              </Select>\n\n              <TextField\n                id=\"standard-full-width\"\n                label=\"Do what?\"\n                placeholder=\"i.e. Play final fantasy xiv online\"\n                helperText=\"Enter the description of the to do item\"\n                fullWidth\n                margin=\"normal\"\n                size=\"medeium\"\n                variant=\"filled\"\n                onChange={(e) =>\n                  this.setState({ inputTodoText: e.target.value })\n                }\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n            </FormControl>\n            <button onClick={() => this.addTodo()}>Save</button>\n            <button onClick={() => this.setState({ modalOpen: false })}>\n              Cancel\n            </button>\n          </ReactModal>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"App_test__3Xp7m\",\"row\":\"App_row__3uKGE\",\"rowHeader\":\"App_rowHeader__3cVMf\",\"fab\":\"App_fab__1pPIC\"};"],"sourceRoot":""}